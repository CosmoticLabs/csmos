import fs from "fs";

const permissions = {
  AddReactions: "Add Reactions",
  Administrator: "Administrator",
  AttachFiles: "Attach Files",
  BanMembers: "Ban Members",
  ChangeNickname: "Change Nickname",
  Connect: "Connect",
  CreateEvents: "Create Events",
  CreateGuildExpressions: "Create Expressions",
  CreateInstantInvite: "Create Invite",
  CreatePrivateThreads: "Create Private Threads",
  CreatePublicThreads: "Create Public Threads",
  DeafenMembers: "Deafen Members",
  EmbedLinks: "Embed Links",
  KickMembers: "Kick Members",
  ManageChannels: "Manage Channels",
  ManageEmojisAndStickers: "Manage Expressions",
  ManageEvents: "Manage Events",
  ManageGuild: "Manage Server",
  ManageGuildExpressions: "Manage Expressions",
  ManageMessages: "Manage Messages",
  ManageNicknames: "Manage Nicknames",
  ManageROles: "Manage Roles",
  ManageThreads: "Manage Threads",
  MentionEveryone: "Mention @everyone, @here, and All Roles",
  ModerateMembers: "Moderate Members",
  MoveMembers: "Move Members",
  MuteMembers: "Mute Members",
  PrioritySpeaker: "Priority Speaker",
  ReadMessageHistory: "Read Message History",
  RequestToSpeak: "Request to Speak",
  SendMessages: "Send Messages",
  SendMessagesInThreads: "Send Messges in Threads",
  SendTTSMessages: "Send Text-to-Speech Messages",
  SendVoiceMessages: "Send Voice Messages",
  Speak: "Speak",
  Stream: "Video",
  UseApplicationCommands: "Use Application Commands",
  UseEmbeddedActivities: "Use Activities",
  UseExternalEmojis: "Use External Emojis",
  UseExternalSounds: "Use External Sounds",
  UseExternalStickers: "Use External Stickers",
  UseSoundboard: "Use Soundboard",
  UseVAD: "Use Voice Activity",
  ViewAuditLog: "View Audit Log",
  ViewChannel: "View Channel",
  ViewCreatorMonetizationAnalytics: "View Creator Monetization Analytics",
  ViewGuildInsights: "View Server Insights",
};

async function main() {
  const categories = fs.readdirSync("./apps/bot/src/commands");
  for (const category of categories) {
    const commandFiles = fs
      .readdirSync(`./apps/bot/src/commands/${category}`)
      .filter((file) => file.endsWith("js") || file.endsWith("ts"));
    for (const file of commandFiles) {
      const command = fs.readFileSync(
        `./apps/bot/src/commands/${category}/${file}`,
        "utf8"
      );
      const [rawCode] = command.match(/(?<=(new Command\()){[\s\S]*}/g);
      const code = rawCode
        .replace(/(['"])?([a-z0-9A-Z_]+)(['"])?:/g, '"$2":')
        .split("\n");
      const runIndex = code.findIndex((str) => str.includes("run"));
      const data = eval(
        "var data = " +
          code.slice(0, runIndex).join("\n").replace(/,\s*$/, "") +
          "\n}" +
          "\ndata;"
      );
      const markdown = [
        "---",
        `# DO NOT EDIT THIS FILE. This is automatically generated by the script in \`scripts/docgen/commands.mjs\`. To update these contents, update the information in \`apps/bot/src/commands/${category}/${file}\`.\n`,
        `title: ${data.name}`,
        `description: ${data.description}`,
        "---\n",
        data.description,
        "\n## Usage",
        "\n```sh",
        data.usage
          ? typeof data.usage === "object"
            ? data.usage.map((str) => `;${str}`).join("\n")
            : ";" + data.usage
          : `;${data.name}`,
        "```",
        data.examples
          ? [
              `\n## Example${data.examples.length >= 1 ? "s" : ""}`,
              "\n```sh",
              data.examples
                ?.map(
                  (example) =>
                    `# ${example.description}\n;${example.example ?? data.name}`
                )
                .join("\n"),
              "```",
            ].join("\n")
          : undefined,
        data.aliases
          ? [
              "\n## Aliases\n",
              data.aliases.map((alias) => `- ${alias}`).join("\n"),
            ].join("\n")
          : undefined,
        data.userPermissions || data.permissions
          ? [
              "\n## Required Permissions\n",
              "\n:::note",
              "Learn more about permissions in [Discord's FAQ](https://support.discord.com/hc/en-us/articles/206029707-Setting-Up-Permissions-FAQ).",
              ":::\n",
              [
                ...(data.userPermissions?.map(
                  (perm) => `- ${permissions[perm]}`
                ) || []),
                ...(data.permissions?.map((perm) => `- ${perm}`) || []),
              ]
                .sort((a, b) => a.localeCompare(b))
                .join("\n"),
            ].join("\n")
          : undefined,
      ]
        .filter(Boolean)
        .join("\n");

      if (!fs.existsSync(`./apps/web/src/content/docs/commands/${category}`))
        fs.mkdirSync(`./apps/web/src/content/docs/commands/${category}`);
      fs.writeFileSync(
        `./apps/web/src/content/docs/commands/${category}/${
          file.split(".")[0]
        }.md`,
        markdown
      );
    }
  }
}

main();
